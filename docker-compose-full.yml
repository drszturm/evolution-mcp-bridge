version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  evolution-mcp-bridge:
    build: .
    ports:
      - "8000:8000"
    environment:
      - EVOLUTION_API_BASE_URL=${EVOLUTION_API_BASE_URL}
      - EVOLUTION_API_KEY=${EVOLUTION_API_KEY}
      - MCP_SERVER_URL=${MCP_SERVER_URL}
      - MCP_API_KEY=${MCP_API_KEY}
      - REDIS_URL=redis://redis:6379
      - HOST=0.0.0.0
      - PORT=8000
      - WEBHOOK_URL=${WEBHOOK_URL}
      - CACHE_ENABLED=true
      - CACHE_TTL=3600
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Include your MCP server if it's also containerized
  mcp-server:
    image: your-mcp-server-image:latest
    ports:
      - "8001:8000"
    environment:
      - MCP_API_KEY=${MCP_API_KEY}
    restart: unless-stopped

volumes:
  redis_data: